<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UUogRkbsVgiIApREIEREKEREAREQBERAf//Z
</value>
  </data>
</root>